worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # HTTP -> HTTPS 리다이렉트
    server {
        listen 80;
        server_name localhost;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS 설정
    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/ssl/myserver.crt;
        ssl_certificate_key /etc/nginx/ssl/myserver.key;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # 프론트엔드 정적 파일 제공
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        # 백엔드 API 프록시 설정 (HTTP)
        location /api/ {
            proxy_pass http://backend:8000;  # 백엔드 서비스로 프록시 요청
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket 프록시 설정 (WSS)
        location /ws/ {
            proxy_pass http://backend:8000;  # WebSocket이 백엔드로 프록시 처리
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;  # WebSocket 업그레이드
            proxy_set_header Connection "Upgrade";  # 연결 업그레이드
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;  # 캐시 우회
        }

        location /media/ {
            alias /media/;  # 컨테이너 내부의 /media 경로로 설정 (Docker 볼륨을 통해 마운트됨)
            autoindex on;   # 파일 목록 표시 (선택 사항)
        }
    }
}
